# Nginx server block configuration with proxy_pass to Unicorn upstream
# We use full-SSL site with web-server redirection, no mess with Rails application redirection
#
# included in /etc/nginx/nginx.conf


upstream gp_production_unicorn {
  server              127.0.0.1:3000 fail_timeout=0;
}


server {
  listen              80;
  server_name         gp.ru *.gp.ru;
  root                /w/gp/public;
  try_files           $uri /system/maintenance.html @gp_production_unicorn;

  # remove slash in end url
  rewrite ^/(.*)/$ /$1 permanent;


  # remove subdomain www
  if ($host ~* www\.(.*)) {
    set $host_without_www $1;
    rewrite ^(.*)$ http://$host_without_www$1 permanent;
  }


  # redirect search engine on site, if detect odkl app
  if ( $http_user_agent ~* "(yandex|googlebot|alltheweb|baidu|bingbot|msnbot|slurp)" ) {
    set $is_redrect_se A;
  }

  if ( $host ~* odkl\.(.*) ) {
    set $is_redrect_se "${is_redrect_se}B";
  }

  if ( $is_redrect_se = AB ) {
    set $host_without_www $1;
    rewrite ^(.*)$ http://$host_without_www$1 permanent;
  }


  location @gp_production_unicorn {
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_set_header  Host $http_host;
    proxy_redirect    off;
    proxy_pass        http://gp_production_unicorn;
    #limit_req         zone=one burst=5;

    access_log        /dev/null;
    error_log         /stuff2/work/gp/log/unicorn.error.log;
  }

  #location ~ ^/(assets|images|javascripts|stylesheets|swfs|system|files|js|css)/ {
  location ~ ^/(audio|files|fonts|img|js)/ {
    gzip_static       on;
    expires           max;
    add_header        Cache-Control public;
    add_header        Last-Modified "";
    add_header        ETag "";

    open_file_cache          max=1000 inactive=500s;
    open_file_cache_valid    600s;
    open_file_cache_errors   on;
    break;
  }


  location = /sitemap.xml {
    root              /w/gp/public/;
    gzip_static       on;
    expires           max;
    add_header        Cache-Control public;
    add_header        Last-Modified "";
    add_header        ETag "";
    break;
  }

  location = /robots.txt  {
    access_log      off;
    log_subrequest  off;
    log_not_found   off;
  }

  location = /protected {
    auth_basic              "Protected Zone";
    auth_basic_user_file    /w/gp/config/server/.htpasswd;
  }

  location = /orders/odkl {
    auth_basic              "Protected Zone";
    auth_basic_user_file    /w/gp/config/server/.htpasswd;
  }


  access_log          /stuff2/work/gp/log/nginx-access.log;
  error_log           /stuff2/work/gp/log/nginx-error.log;
}